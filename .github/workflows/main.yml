name: deploy core-api

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
        type: choice
        options:
          - info
          - warning
          - debug

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v3
#        with:
#          node-version: ${{ matrix.node-version }}
#      - name: Install doctl
#        uses: digitalocean/action-doctl@v2
#        with:
#          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6
      - name: Get git commit hash
        id: commit-hash
        uses: pr-mpt/actions-commit-hash@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set image tag
        run: echo "IMAGE_TAG=${{ steps.branch-name.outputs.current_branch }}-${{ steps.commit-hash.outputs.short }}" >> $GITHUB_ENV
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/core-api:${{ env.IMAGE_TAG }}
#      - name: Build and Publish Docker Image
#        run: ./gradlew bootJar jib -Pprod -Papi-docs -Djib.to.image=${{ secrets.DOCKERHUB_USERNAME }}/core-api:${{ env.IMAGE_TAG }}
#      - name: Download coreapi-app spec
#        run: doctl apps list | grep coreapi-app | awk '{print $1}' | xargs doctl apps spec get $1 --format json > infra/do-app-spec-input.json
#      - name: Replace latest image
#        run: node infra/do-app-spec-processor.js
#      - name: Update core-api spec
#        run: doctl apps list | grep coreapi-app | awk '{print $1}' | xargs doctl apps update $1 --spec infra/do-app-spec.json
#      - name: Delete temporary app spec file
#        run: rm infra/*.json